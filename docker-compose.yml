version: "3.9"

services:
  db:
    image: mongo:4.4
    container_name: mongodb
    restart: always
    environment:
      MONGO_INITDB_ROOT_USERNAME: myuser
      MONGO_INITDB_ROOT_PASSWORD: mypassword
    volumes:
      - ./data/mongodb:/data/db
    ports:
      - 27017:27017

  postgres:
    image: postgres:13.3
    container_name: postgres
    restart: always
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: Krystabella151289
      POSTGRES_DB: movies
    volumes:
      - ./data/postgres:/var/lib/postgresql/data
    ports:
      - 5432:5432

  django:
    build: .
    container_name: django
    restart: always
    command: python manage.py runserver 0.0.0.0:8000
    volumes:
      - .:/app
    ports:
      - 8000:8000
    depends_on:
      - db
      - postgres
      - celery
      - debezium

  celery:
    build: .
    container_name: celery
    restart: always
    command: celery -A movie worker --loglevel=info
    volumes:
      - .:/app
    depends_on:
      - db
      - redis
      - debezium

  redis:
    image: redis:6.2.5-alpine
    container_name: redis
    restart: always
    volumes:
      - ./data/redis:/data
    ports:
      - 6379:6379

  debezium:
    image: debezium/connect:1.6
    container_name: debezium
    restart: always
    environment:
      - BOOTSTRAP_SERVERS=kafka:9092
      - GROUP_ID=1
      - CONFIG_STORAGE_TOPIC=myapp_config
      - OFFSET_STORAGE_TOPIC=myapp_offsets
      - STATUS_STORAGE_TOPIC=myapp_status
    depends_on:
      - kafka
    ports:
      - 8083:8083

  kafka:
    image: debezium/kafka:1.6
    container_name: kafka
    restart: always
    environment:
      - ZOOKEEPER_CONNECT=zookeeper:2181
    ports:
      - 9092:9092

  zookeeper:
    image: debezium/zookeeper:1.6
    container_name: zookeeper
    restart: always
    ports:
      - 2181:2181
